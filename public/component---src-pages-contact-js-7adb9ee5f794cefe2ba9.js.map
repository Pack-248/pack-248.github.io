{"version":3,"file":"component---src-pages-contact-js-7adb9ee5f794cefe2ba9.js","mappings":"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","sources":["webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/store/store.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/index.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://cub-scout-pack-248/./node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","webpack://cub-scout-pack-248/./src/components/contactform.js","webpack://cub-scout-pack-248/./src/pages/contact.js"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import React, {useRef, useState} from 'react';\r\nimport emailjs from '@emailjs/browser';\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(fas);\r\n\r\nconst ContactForm = () => {\r\n    const form = useRef();\r\n\r\n    const [isHidden, setIsHidden] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n\r\n        emailjs\r\n          .sendForm(process.env.GATSBY_APP_SERVICE_ID, process.env.GATSBY_APP_TEMPLATE_ID, form.current, {\r\n            publicKey: process.env.GATSBY_APP_PUBLIC_KEY,\r\n          })\r\n          .then(\r\n            () => {\r\n              setIsHidden(current => !current);\r\n            },\r\n            (error) => {\r\n              console.log('FAILED...', error.text);\r\n              setIsError(current => !current);\r\n            },\r\n          );\r\n      };\r\n\r\n      return (\r\n        <div className='w-2/3 m-6 grid grid-cols-2 mx-auto'>\r\n          <div id='contactLeftSide' className='w-full flex flex-col items-left justify-center '>\r\n              <h1 className='align-middle  mx-6 font-bold text-3xl '>Get in touch</h1>\r\n              <p className='line-h-8 align-middle my-6 mx-6 text-lg'>Fill in the form to send us a quick message. Or you can try one of the methods below</p>\r\n              <dl className='m-6 line-h-6 flex flex-col gap-4 '>\r\n                <div className='flex gap-4'>\r\n                  <dt className='grid place-items-center w-16 text-center'>\r\n                    <span className=\"absolute w-px h-px p-0 -m-px overflow-hidden whitespace-nowrap b-0\">Address</span>\r\n                    <FontAwesomeIcon className='h-12 text-cubScoutBlue' icon={['fas', 'building']} />\r\n                  </dt>\r\n                  <dd className='grid place-items-center'>20088 Apache Dr<br/>Clinton Township, MI 48038</dd>\r\n                </div>\r\n                <div className='flex gap-4'>\r\n                  <dt className=\"grid place-items-center w-16 text-center\">\r\n                    <span className=\"absolute w-px h-px p-0 -m-px overflow-hidden whitespace-nowrap b-0\">Telephone</span>\r\n                    <FontAwesomeIcon className='h-10 text-cubScoutBlue' icon={['fas', 'phone']} />\r\n                  </dt>\r\n                  <dd className='grid place-items-center'><a href='tel:+1 (586) 419-0427'>+1 (586) 419-0427</a></dd>\r\n                </div>\r\n                <div className='flex gap-4'>\r\n                  <dt className='grid place-items-center w-16 text-center'>\r\n                    <span className=\"absolute w-px h-px p-0 -m-px overflow-hidden whitespace-nowrap b-0\">Email</span>\r\n                    <FontAwesomeIcon className='h-10 text-cubScoutBlue' icon={['fas', 'envelope']} />\r\n                  </dt>\r\n                  <dd className='grid place-items-center'><a href=\"mailto:pack248mi@gmail.com\" class=\"blx\">pack248mi@gmail.com</a></dd>\r\n                </div>\r\n              </dl>\r\n\r\n          </div>\r\n          <div id='contactRightSide' className='w-full flex'>\r\n            <h2 className={isHidden ? 'text-2xl font-semibold text-cubScoutBlue mx-auto max-w-xl' : 'hidden'}>Thank you for reaching out!</h2>\r\n            <h2 className={isError ? 'text-2xl font-semibold text-wolfRed mx-auto max-w-xl' : 'hidden'}>An error occurred while sending. Please try again.</h2>\r\n            <form ref={form} onSubmit={sendEmail} className={isHidden ? 'hidden' : 'mx-auto mt-16 max-w-xl sm:mt-20'}>\r\n              <div className=\"grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2\">\r\n                <div className=\"sm:col-span-2\">\r\n                  <label htmlFor=\"user_name\" className=\"block text-sm font-semibold leading-6 text-scoutDarkGray\">Name</label>\r\n                  <div className=\"mt-2.5\">\r\n                    <input type=\"text\" name=\"user_name\" id=\"user_name\" autoComplete=\"given-name\" className=\"block w-full rounded-md border-0 px-3.5 py-2 text-scoutDarkGray shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sm:col-span-2\">\r\n                  <label htmlFor=\"user_email\" className=\"block text-sm font-semibold leading-6 text-scoutDarkGray\">Email</label>\r\n                  <div className=\"mt-2.5\">\r\n                    <input type=\"email\" name=\"user_email\" id=\"user_email\" autoComplete=\"email\" className=\"block w-full rounded-md border-0 px-3.5 py-2 text-scoutDarkGray shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"/>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sm:col-span-2\">\r\n                  <label htmlFor=\"message\" className=\"block text-sm font-semibold leading-6 text-scoutDarkGray\">Message</label>\r\n                  <div className=\"mt-2.5\">\r\n                    <textarea name=\"message\" id=\"message\" rows=\"4\" className=\"block w-full rounded-md border-0 px-3.5 py-2 text-scoutDarkGray shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            <div className=\"my-10 w-96\">\r\n                <input id=\"to_name\" name=\"to_name\" type=\"hidden\" value=\"Pack 248\"/>\r\n              <button type=\"submit\" className=\"block w-full rounded-md bg-cubScoutBlue px-3.5 py-2.5 text-center text-sm font-semibold text-scoutLightTan shadow-sm hover:bg-cubScoutPaleBlue focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-cubScoutBlue\">Let's talk</button>\r\n            </div>\r\n          </form>\r\n          </div>\r\n        </div>\r\n        );\r\n  };\r\n  export default ContactForm;","import * as React from 'react';\r\nimport Layout from '../components/layout';\r\nimport ContactForm from '../components/contactform'\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <Layout pageTitle=\"Contact\">\r\n    <div className='mx-6'>\r\n      <ContactForm />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <title>Pack 248 - Contact Us</title>;\r\nexport default ContactPage;"],"names":["EmailJSResponseStatus","constructor","_status","_text","this","status","text","store","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","createWebStorage","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","length","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","name","FormData","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","id","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","form","opts","blockList","limitRate","reject","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","location","pathname","append","library","add","fas","ContactForm","useRef","isHidden","setIsHidden","useState","isError","setIsError","React","className","FontAwesomeIcon","icon","href","class","ref","onSubmit","e","preventDefault","emailjs","process","current","then","error","console","log","htmlFor","type","autoComplete","rows","Head","ContactPage","Layout","pageTitle"],"sourceRoot":""}