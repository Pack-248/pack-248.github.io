{"version":3,"file":"266f325b1144774e7b4018333901b11ccd24c405-996599d7465b57912686.js","mappings":"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","sources":["webpack://cub-scout-pack-248/./node_modules/base64-js/index.js","webpack://cub-scout-pack-248/./node_modules/buffer/index.js","webpack://cub-scout-pack-248/./node_modules/extend-shallow/index.js","webpack://cub-scout-pack-248/./node_modules/extend/index.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/index.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/defaults.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/engine.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/engines.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/excerpt.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/parse.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/stringify.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/to-file.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/utils.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://cub-scout-pack-248/./node_modules/ieee754/index.js","webpack://cub-scout-pack-248/./node_modules/is-extendable/index.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/index.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/common.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/dumper.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/exception.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/loader.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/mark.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/core.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/default_full.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/json.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/binary.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/bool.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/float.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/int.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/function.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/map.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/merge.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/null.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/omap.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/pairs.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/seq.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/set.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/str.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/timestamp.js","webpack://cub-scout-pack-248/./node_modules/kind-of/index.js","webpack://cub-scout-pack-248/./node_modules/section-matter/index.js","webpack://cub-scout-pack-248/./node_modules/strip-bom-string/index.js","webpack://cub-scout-pack-248/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/comma-separated-tokens/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/space-separated-tokens/index.js","webpack://cub-scout-pack-248/./node_modules/html-url-attributes/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-chunked/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-subtokenize/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-combine-extensions/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-character/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-space/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/content.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-resolve-all/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/list.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-destination/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-label/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-title/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-whitespace/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-normalize-identifier/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-html-tag-name/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://cub-scout-pack-248/./node_modules/decode-named-character-reference/index.dom.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-classify-character/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-decode-string/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/types.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-sanitize-uri/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-is/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://cub-scout-pack-248/./node_modules/trim-lines/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/bail/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/trough/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function extend(o/*, objects*/) {\n  if (!isObject(o)) { o = {}; }\n\n  var len = arguments.length;\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      assign(o, obj);\n    }\n  }\n  return o;\n};\n\nfunction assign(a, b) {\n  for (var key in b) {\n    if (hasOwn(b, key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nconst fs = require('fs');\nconst sections = require('section-matter');\nconst defaults = require('./lib/defaults');\nconst stringify = require('./lib/stringify');\nconst excerpt = require('./lib/excerpt');\nconst engines = require('./lib/engines');\nconst toFile = require('./lib/to-file');\nconst parse = require('./lib/parse');\nconst utils = require('./lib/utils');\n\n/**\n * Takes a string or object with `content` property, extracts\n * and parses front-matter from the string, then returns an object\n * with `data`, `content` and other [useful properties](#returned-object).\n *\n * ```js\n * const matter = require('gray-matter');\n * console.log(matter('---\\ntitle: Home\\n---\\nOther stuff'));\n * //=> { data: { title: 'Home'}, content: 'Other stuff' }\n * ```\n * @param {Object|String} `input` String, or object with `content` string\n * @param {Object} `options`\n * @return {Object}\n * @api public\n */\n\nfunction matter(input, options) {\n  if (input === '') {\n    return { data: {}, content: input, excerpt: '', orig: input };\n  }\n\n  let file = toFile(input);\n  const cached = matter.cache[file.content];\n\n  if (!options) {\n    if (cached) {\n      file = Object.assign({}, cached);\n      file.orig = cached.orig;\n      return file;\n    }\n\n    // only cache if there are no options passed. if we cache when options\n    // are passed, we would need to also cache options values, which would\n    // negate any performance benefits of caching\n    matter.cache[file.content] = file;\n  }\n\n  return parseMatter(file, options);\n}\n\n/**\n * Parse front matter\n */\n\nfunction parseMatter(file, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n  const close = '\\n' + opts.delimiters[1];\n  let str = file.content;\n\n  if (opts.language) {\n    file.language = opts.language;\n  }\n\n  // get the length of the opening delimiter\n  const openLen = open.length;\n  if (!utils.startsWith(str, open, openLen)) {\n    excerpt(file, opts);\n    return file;\n  }\n\n  // if the next character after the opening delimiter is\n  // a character from the delimiter, then it's not a front-\n  // matter delimiter\n  if (str.charAt(openLen) === open.slice(-1)) {\n    return file;\n  }\n\n  // strip the opening delimiter\n  str = str.slice(openLen);\n  const len = str.length;\n\n  // use the language defined after first delimiter, if it exists\n  const language = matter.language(str, opts);\n  if (language.name) {\n    file.language = language.name;\n    str = str.slice(language.raw.length);\n  }\n\n  // get the index of the closing delimiter\n  let closeIndex = str.indexOf(close);\n  if (closeIndex === -1) {\n    closeIndex = len;\n  }\n\n  // get the raw front-matter block\n  file.matter = str.slice(0, closeIndex);\n\n  const block = file.matter.replace(/^\\s*#[^\\n]+/gm, '').trim();\n  if (block === '') {\n    file.isEmpty = true;\n    file.empty = file.content;\n    file.data = {};\n  } else {\n\n    // create file.data by parsing the raw file.matter block\n    file.data = parse(file.language, file.matter, opts);\n  }\n\n  // update file.content\n  if (closeIndex === len) {\n    file.content = '';\n  } else {\n    file.content = str.slice(closeIndex + close.length);\n    if (file.content[0] === '\\r') {\n      file.content = file.content.slice(1);\n    }\n    if (file.content[0] === '\\n') {\n      file.content = file.content.slice(1);\n    }\n  }\n\n  excerpt(file, opts);\n\n  if (opts.sections === true || typeof opts.section === 'function') {\n    sections(file, opts.section);\n  }\n  return file;\n}\n\n/**\n * Expose engines\n */\n\nmatter.engines = engines;\n\n/**\n * Stringify an object to YAML or the specified language, and\n * append it to the given string. By default, only YAML and JSON\n * can be stringified. See the [engines](#engines) section to learn\n * how to stringify other languages.\n *\n * ```js\n * console.log(matter.stringify('foo bar baz', {title: 'Home'}));\n * // results in:\n * // ---\n * // title: Home\n * // ---\n * // foo bar baz\n * ```\n * @param {String|Object} `file` The content string to append to stringified front-matter, or a file object with `file.content` string.\n * @param {Object} `data` Front matter to stringify.\n * @param {Object} `options` [Options](#options) to pass to gray-matter and [js-yaml].\n * @return {String} Returns a string created by wrapping stringified yaml with delimiters, and appending that to the given string.\n * @api public\n */\n\nmatter.stringify = function(file, data, options) {\n  if (typeof file === 'string') file = matter(file, options);\n  return stringify(file, data, options);\n};\n\n/**\n * Synchronously read a file from the file system and parse\n * front matter. Returns the same object as the [main function](#matter).\n *\n * ```js\n * const file = matter.read('./content/blog-post.md');\n * ```\n * @param {String} `filepath` file path of the file to read.\n * @param {Object} `options` [Options](#options) to pass to gray-matter.\n * @return {Object} Returns [an object](#returned-object) with `data` and `content`\n * @api public\n */\n\nmatter.read = function(filepath, options) {\n  const str = fs.readFileSync(filepath, 'utf8');\n  const file = matter(str, options);\n  file.path = filepath;\n  return file;\n};\n\n/**\n * Returns true if the given `string` has front matter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Boolean} True if front matter exists.\n * @api public\n */\n\nmatter.test = function(str, options) {\n  return utils.startsWith(str, defaults(options).delimiters[0]);\n};\n\n/**\n * Detect the language to use, if one is defined after the\n * first front-matter delimiter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Object} Object with `raw` (actual language string), and `name`, the language with whitespace trimmed\n */\n\nmatter.language = function(str, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n\n  if (matter.test(str)) {\n    str = str.slice(open.length);\n  }\n\n  const language = str.slice(0, str.search(/\\r?\\n/));\n  return {\n    raw: language,\n    name: language ? language.trim() : ''\n  };\n};\n\n/**\n * Expose `matter`\n */\n\nmatter.cache = {};\nmatter.clearCache = function() {\n  matter.cache = {};\n};\nmodule.exports = matter;\n","'use strict';\n\nconst engines = require('./engines');\nconst utils = require('./utils');\n\nmodule.exports = function(options) {\n  const opts = Object.assign({}, options);\n\n  // ensure that delimiters are an array\n  opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || '---');\n  if (opts.delimiters.length === 1) {\n    opts.delimiters.push(opts.delimiters[0]);\n  }\n\n  opts.language = (opts.language || opts.lang || 'yaml').toLowerCase();\n  opts.engines = Object.assign({}, engines, opts.parsers, opts.engines);\n  return opts;\n};\n","'use strict';\n\nmodule.exports = function(name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n  if (typeof engine === 'function') {\n    engine = { parse: engine };\n  }\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n    default: {\n      return name;\n    }\n  }\n}\n","'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function(obj, options) {\n    const opts = Object.assign({replacer: null, space: 2}, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function() {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};\n","'use strict';\n\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, options) {\n  const opts = defaults(options);\n\n  if (file.data == null) {\n    file.data = {};\n  }\n\n  if (typeof opts.excerpt === 'function') {\n    return opts.excerpt(file, opts);\n  }\n\n  const sep = file.data.excerpt_separator || opts.excerpt_separator;\n  if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {\n    return file;\n  }\n\n  const delimiter = typeof opts.excerpt === 'string'\n    ? opts.excerpt\n    : (sep || opts.delimiters[0]);\n\n  // if enabled, get the excerpt defined after front-matter\n  const idx = file.content.indexOf(delimiter);\n  if (idx !== -1) {\n    file.excerpt = file.content.slice(0, idx);\n  }\n\n  return file;\n};\n","'use strict';\n\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(language, str, options) {\n  const opts = defaults(options);\n  const engine = getEngine(language, opts);\n  if (typeof engine.parse !== 'function') {\n    throw new TypeError('expected \"' + language + '.parse\" to be a function');\n  }\n  return engine.parse(str, opts);\n};\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default: {\n        throw new TypeError('expected file to be a string or object');\n      }\n    }\n  }\n\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n\n  return buf + newline(str);\n};\n\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\nmodule.exports = function(file) {\n  if (typeOf(file) !== 'object') {\n    file = { content: file };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  }\n\n  // if file was passed as an object, ensure that\n  // \"file.content\" is set\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  }\n\n  // set non-enumerable properties on the file object\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function(data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n    return stringify(file, data, options);\n  });\n\n  // strip BOM and ensure that \"file.content\" is a string\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};\n","'use strict';\n\nconst stripBom = require('strip-bom-string');\nconst typeOf = require('kind-of');\n\nexports.define = function(obj, key, val) {\n  Reflect.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: val\n  });\n};\n\n/**\n * Returns true if `val` is a buffer\n */\n\nexports.isBuffer = function(val) {\n  return typeOf(val) === 'buffer';\n};\n\n/**\n * Returns true if `val` is an object\n */\n\nexports.isObject = function(val) {\n  return typeOf(val) === 'object';\n};\n\n/**\n * Cast `input` to a buffer\n */\n\nexports.toBuffer = function(input) {\n  return typeof input === 'string' ? Buffer.from(input) : input;\n};\n\n/**\n * Cast `val` to a string.\n */\n\nexports.toString = function(input) {\n  if (exports.isBuffer(input)) return stripBom(String(input));\n  if (typeof input !== 'string') {\n    throw new TypeError('expected input to be a string or buffer');\n  }\n  return stripBom(input);\n};\n\n/**\n * Cast `val` to an array.\n */\n\nexports.arrayify = function(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n};\n\n/**\n * Returns true if `str` starts with `substr`.\n */\n\nexports.startsWith = function(str, substr, len) {\n  if (typeof len !== 'number') len = substr.length;\n  return str.slice(0, len) === substr;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// [24] b-line-feed       ::=     #xA    /* LF */\n// [25] b-carriage-return ::=     #xD    /* CR */\n// [3]  c-byte-order-mark ::=     #xFEFF\nfunction isNsChar(c) {\n  return isPrintable(c) && !isWhitespace(c)\n    // byte-order-mark\n    && c !== 0xFEFF\n    // b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c, prev) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    // /* An ns-char preceding */ \"#\"\n    && c !== CHAR_COLON\n    && ((c !== CHAR_SHARP) || (prev && isNsChar(prev)));\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char, prev_char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (index !== 0) pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","'use strict';\n\nvar typeOf = require('kind-of');\nvar extend = require('extend-shallow');\n\n/**\n * Parse sections in `input` with the given `options`.\n *\n * ```js\n * var sections = require('{%= name %}');\n * var result = sections(input, options);\n * // { content: 'Content before sections', sections: [] }\n * ```\n * @param {String|Buffer|Object} `input` If input is an object, it's `content` property must be a string or buffer.\n * @param {Object} options\n * @return {Object} Returns an object with a `content` string and an array of `sections` objects.\n * @api public\n */\n\nmodule.exports = function(input, options) {\n  if (typeof options === 'function') {\n    options = { parse: options };\n  }\n\n  var file = toObject(input);\n  var defaults = {section_delimiter: '---', parse: identity};\n  var opts = extend({}, defaults, options);\n  var delim = opts.section_delimiter;\n  var lines = file.content.split(/\\r?\\n/);\n  var sections = null;\n  var section = createSection();\n  var content = [];\n  var stack = [];\n\n  function initSections(val) {\n    file.content = val;\n    sections = [];\n    content = [];\n  }\n\n  function closeSection(val) {\n    if (stack.length) {\n      section.key = getKey(stack[0], delim);\n      section.content = val;\n      opts.parse(section, sections);\n      sections.push(section);\n      section = createSection();\n      content = [];\n      stack = [];\n    }\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var len = stack.length;\n    var ln = line.trim();\n\n    if (isDelimiter(ln, delim)) {\n      if (ln.length === 3 && i !== 0) {\n        if (len === 0 || len === 2) {\n          content.push(line);\n          continue;\n        }\n        stack.push(ln);\n        section.data = content.join('\\n');\n        content = [];\n        continue;\n      }\n\n      if (sections === null) {\n        initSections(content.join('\\n'));\n      }\n\n      if (len === 2) {\n        closeSection(content.join('\\n'));\n      }\n\n      stack.push(ln);\n      continue;\n    }\n\n    content.push(line);\n  }\n\n  if (sections === null) {\n    initSections(content.join('\\n'));\n  } else {\n    closeSection(content.join('\\n'));\n  }\n\n  file.sections = sections;\n  return file;\n};\n\nfunction isDelimiter(line, delim) {\n  if (line.slice(0, delim.length) !== delim) {\n    return false;\n  }\n  if (line.charAt(delim.length + 1) === delim.slice(-1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction toObject(input) {\n  if (typeOf(input) !== 'object') {\n    input = { content: input };\n  }\n\n  if (typeof input.content !== 'string' && !isBuffer(input.content)) {\n    throw new TypeError('expected a buffer or string');\n  }\n\n  input.content = input.content.toString();\n  input.sections = [];\n  return input;\n}\n\nfunction getKey(val, delim) {\n  return val ? val.slice(delim.length).trim() : '';\n}\n\nfunction createSection() {\n  return { key: '', data: '', content: '' };\n}\n\nfunction identity(val) {\n  return val;\n}\n\nfunction isBuffer(val) {\n  if (val && val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","/*!\n * strip-bom-string <https://github.com/jonschlinkert/strip-bom-string>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(str) {\n  if (typeof str === 'string' && str.charAt(0) === '\\ufeff') {\n    return str.slice(1);\n  }\n  return str;\n};\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isObject","assign","key","hasOwn","hasOwnProperty","module","o","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","options","newValue","getProperty","extend","copyIsArray","clone","deep","fs","sections","defaults","stringify","excerpt","engines","toFile","parse","utils","matter","content","orig","file","cached","cache","opts","open","delimiters","close","language","openLen","startsWith","charAt","raw","closeIndex","block","isEmpty","empty","section","parseMatter","filepath","readFileSync","path","test","search","clearCache","arrayify","delims","lang","parsers","engine","aliase","yaml","safeLoad","bind","safeDump","json","JSON","replacer","space","javascript","wrap","eval","err","SyntaxError","sep","excerpt_separator","delimiter","idx","getEngine","typeOf","newline","contents","define","toBuffer","stripBom","Reflect","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","style","lineno","column","updatePosition","lines","match","position","line","node","Position","whitespace","source","errorsList","reason","filename","silent","re","exec","comments","rules","comment","declaration","prop","property","decl","decls","declarations","__importDefault","mod","__esModule","iterator","styleObject","inline_style_parser_1","default","hasIterator","forEach","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","loader","dumper","deprecated","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SAFE_SCHEMA","DEFAULT_FULL_SCHEMA","load","loadAll","safeLoadAll","dump","YAMLException","MINIMAL_SCHEMA","SAFE_SCHEMA","DEFAULT_SCHEMA","scan","compose","addConstructor","isNothing","subject","toArray","sequence","repeat","count","cycle","result","isNegativeZero","number","NEGATIVE_INFINITY","index","sourceKeys","keys","common","_toString","_hasOwnProperty","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","encodeHex","character","handle","toUpperCase","State","schema","indent","noArrayIndent","skipInvalid","flowLevel","styleMap","map","tag","compiledTypeMap","styleAliases","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","implicitTypes","compiledImplicit","explicitTypes","compiledExplicit","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","state","level","isWhitespace","isPrintable","isPlainSafe","prev","isNsChar","needIndentIndicator","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prev_char","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","resolve","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","prefix","foldString","nextChar","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","detectType","object","explicit","_result","typeList","instanceOf","predicate","represent","defaultStyle","writeNode","compact","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","_tag","objectKeyList","sort","writeBlockMapping","writeFlowMapping","arrayLevel","writeBlockSequence","writeFlowSequence","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","mark","captureStackTrace","create","Mark","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","simpleEscapeCheck","simpleEscapeMap","onWarning","legacy","listener","typeMap","lineStart","lineIndent","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","tagMap","captureSegment","checkJson","_position","_length","_character","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startPos","readLineBreak","ch","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_anchor","anchor","detected","anchorMap","composeNode","kind","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_pos","atExplicitKey","readBlockMapping","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","alias","readAlias","withinFlowCollection","hasPendingContent","_lineStart","_lineIndent","_kind","readPlainScalar","construct","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","getSnippet","maxLength","head","tail","snippet","where","compileList","exclude","include","includedSchema","currentType","previousType","previousIndex","filter","definition","implicit","loadKind","scalar","mapping","fallback","collectType","compileMap","DEFAULT","schemas","types","every","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","NodeBuffer","__","BASE64_MAP","bitlen","tailbits","bits","lowercase","uppercase","camelcase","YAML_FLOAT_PATTERN","RegExp","SCIENTIFIC_WITHOUT_DOT","sign","base","digits","POSITIVE_INFINITY","v","unshift","parseFloat","isOctCode","isDecCode","hasDigits","binary","octal","decimal","hexadecimal","esprima","_","window","ast","body","expression","params","param","Function","regexp","modifiers","global","multiline","ignoreCase","canonical","pair","pairKey","pairHasKey","objectKeys","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","ctorName","callee","isArguments","toDateString","getDate","setDate","isDate","stackTraceLimit","isError","flags","isRegexp","throw","return","isGeneratorObj","isDelimiter","delim","identity","toObject","section_delimiter","initSections","closeSection","getKey","ln","nameRe","nameReJsx","emptyOptions","jsx","normal","merge","definitions","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","mask","check","values","own","properties","info","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","loading","loop","low","manifest","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","order","orient","orientation","origin","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","hastToReact","point","pointStart","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","parent","fatal","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","rest","dashes","find","settings","padRight","padLeft","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","SpliceBuffer","initial","left","right","shift","setCursor","stop","reverse","deleteCount","trunc","removed","chunkedPush","item","pushMany","unshiftMany","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","syntaxExtension","all","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","factorySpace","effects","ok","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","document","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","decodeNumericCharacterReference","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","unpair","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","lossy","strict","entries","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","revert","subtype","suffix","listItemLoose","tab","trimLines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","footnoteDefinition","createState","footnoteById","handlers","nodes","trimMarkdownSpaceStart","passThrough","shallow","unknownHandler","defaultUnknownHandler","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","hastTree","run","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","callback","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign"],"sourceRoot":""}