{"version":3,"file":"266f325b1144774e7b4018333901b11ccd24c405-d62f56b57dc62cbf5bf5.js","mappings":"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","sources":["webpack://cub-scout-pack-248/./node_modules/extend-shallow/index.js","webpack://cub-scout-pack-248/./node_modules/extend/index.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/index.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/defaults.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/engine.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/engines.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/excerpt.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/parse.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/stringify.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/to-file.js","webpack://cub-scout-pack-248/./node_modules/gray-matter/lib/utils.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://cub-scout-pack-248/./node_modules/is-extendable/index.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/index.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/common.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/dumper.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/exception.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/loader.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/mark.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/core.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/default_full.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/schema/json.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/binary.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/bool.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/float.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/int.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/function.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/map.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/merge.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/null.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/omap.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/pairs.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/seq.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/set.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/str.js","webpack://cub-scout-pack-248/./node_modules/js-yaml/lib/js-yaml/type/timestamp.js","webpack://cub-scout-pack-248/./node_modules/kind-of/index.js","webpack://cub-scout-pack-248/./node_modules/section-matter/index.js","webpack://cub-scout-pack-248/./node_modules/strip-bom-string/index.js","webpack://cub-scout-pack-248/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/schema.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/merge.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/normalize.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/info.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/types.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/defined-info.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/create.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xlink.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xml.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/xmlns.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/aria.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/html.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/svg.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/find.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/property-information/lib/hast-to-react.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-stringify-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/vfile-message/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/comma-separated-tokens/index.js","webpack://cub-scout-pack-248/./node_modules/hast-util-to-jsx-runtime/node_modules/space-separated-tokens/index.js","webpack://cub-scout-pack-248/./node_modules/html-url-attributes/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-chunked/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-subtokenize/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-combine-extensions/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-character/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-space/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/content.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-resolve-all/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/list.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-destination/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-label/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-title/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-factory-whitespace/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-normalize-identifier/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-html-tag-name/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://cub-scout-pack-248/./node_modules/decode-named-character-reference/index.dom.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-classify-character/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://cub-scout-pack-248/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-decode-string/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/types.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://cub-scout-pack-248/./node_modules/@ungap/structured-clone/esm/index.js","webpack://cub-scout-pack-248/./node_modules/micromark-util-sanitize-uri/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-is/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-visit-parents/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://cub-scout-pack-248/./node_modules/trim-lines/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://cub-scout-pack-248/./node_modules/remark-rehype/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/bail/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/trough/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile-message/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-is/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-visit-parents/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/lib/index.js","webpack://cub-scout-pack-248/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function extend(o/*, objects*/) {\n  if (!isObject(o)) { o = {}; }\n\n  var len = arguments.length;\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      assign(o, obj);\n    }\n  }\n  return o;\n};\n\nfunction assign(a, b) {\n  for (var key in b) {\n    if (hasOwn(b, key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nconst fs = require('fs');\nconst sections = require('section-matter');\nconst defaults = require('./lib/defaults');\nconst stringify = require('./lib/stringify');\nconst excerpt = require('./lib/excerpt');\nconst engines = require('./lib/engines');\nconst toFile = require('./lib/to-file');\nconst parse = require('./lib/parse');\nconst utils = require('./lib/utils');\n\n/**\n * Takes a string or object with `content` property, extracts\n * and parses front-matter from the string, then returns an object\n * with `data`, `content` and other [useful properties](#returned-object).\n *\n * ```js\n * const matter = require('gray-matter');\n * console.log(matter('---\\ntitle: Home\\n---\\nOther stuff'));\n * //=> { data: { title: 'Home'}, content: 'Other stuff' }\n * ```\n * @param {Object|String} `input` String, or object with `content` string\n * @param {Object} `options`\n * @return {Object}\n * @api public\n */\n\nfunction matter(input, options) {\n  if (input === '') {\n    return { data: {}, content: input, excerpt: '', orig: input };\n  }\n\n  let file = toFile(input);\n  const cached = matter.cache[file.content];\n\n  if (!options) {\n    if (cached) {\n      file = Object.assign({}, cached);\n      file.orig = cached.orig;\n      return file;\n    }\n\n    // only cache if there are no options passed. if we cache when options\n    // are passed, we would need to also cache options values, which would\n    // negate any performance benefits of caching\n    matter.cache[file.content] = file;\n  }\n\n  return parseMatter(file, options);\n}\n\n/**\n * Parse front matter\n */\n\nfunction parseMatter(file, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n  const close = '\\n' + opts.delimiters[1];\n  let str = file.content;\n\n  if (opts.language) {\n    file.language = opts.language;\n  }\n\n  // get the length of the opening delimiter\n  const openLen = open.length;\n  if (!utils.startsWith(str, open, openLen)) {\n    excerpt(file, opts);\n    return file;\n  }\n\n  // if the next character after the opening delimiter is\n  // a character from the delimiter, then it's not a front-\n  // matter delimiter\n  if (str.charAt(openLen) === open.slice(-1)) {\n    return file;\n  }\n\n  // strip the opening delimiter\n  str = str.slice(openLen);\n  const len = str.length;\n\n  // use the language defined after first delimiter, if it exists\n  const language = matter.language(str, opts);\n  if (language.name) {\n    file.language = language.name;\n    str = str.slice(language.raw.length);\n  }\n\n  // get the index of the closing delimiter\n  let closeIndex = str.indexOf(close);\n  if (closeIndex === -1) {\n    closeIndex = len;\n  }\n\n  // get the raw front-matter block\n  file.matter = str.slice(0, closeIndex);\n\n  const block = file.matter.replace(/^\\s*#[^\\n]+/gm, '').trim();\n  if (block === '') {\n    file.isEmpty = true;\n    file.empty = file.content;\n    file.data = {};\n  } else {\n\n    // create file.data by parsing the raw file.matter block\n    file.data = parse(file.language, file.matter, opts);\n  }\n\n  // update file.content\n  if (closeIndex === len) {\n    file.content = '';\n  } else {\n    file.content = str.slice(closeIndex + close.length);\n    if (file.content[0] === '\\r') {\n      file.content = file.content.slice(1);\n    }\n    if (file.content[0] === '\\n') {\n      file.content = file.content.slice(1);\n    }\n  }\n\n  excerpt(file, opts);\n\n  if (opts.sections === true || typeof opts.section === 'function') {\n    sections(file, opts.section);\n  }\n  return file;\n}\n\n/**\n * Expose engines\n */\n\nmatter.engines = engines;\n\n/**\n * Stringify an object to YAML or the specified language, and\n * append it to the given string. By default, only YAML and JSON\n * can be stringified. See the [engines](#engines) section to learn\n * how to stringify other languages.\n *\n * ```js\n * console.log(matter.stringify('foo bar baz', {title: 'Home'}));\n * // results in:\n * // ---\n * // title: Home\n * // ---\n * // foo bar baz\n * ```\n * @param {String|Object} `file` The content string to append to stringified front-matter, or a file object with `file.content` string.\n * @param {Object} `data` Front matter to stringify.\n * @param {Object} `options` [Options](#options) to pass to gray-matter and [js-yaml].\n * @return {String} Returns a string created by wrapping stringified yaml with delimiters, and appending that to the given string.\n * @api public\n */\n\nmatter.stringify = function(file, data, options) {\n  if (typeof file === 'string') file = matter(file, options);\n  return stringify(file, data, options);\n};\n\n/**\n * Synchronously read a file from the file system and parse\n * front matter. Returns the same object as the [main function](#matter).\n *\n * ```js\n * const file = matter.read('./content/blog-post.md');\n * ```\n * @param {String} `filepath` file path of the file to read.\n * @param {Object} `options` [Options](#options) to pass to gray-matter.\n * @return {Object} Returns [an object](#returned-object) with `data` and `content`\n * @api public\n */\n\nmatter.read = function(filepath, options) {\n  const str = fs.readFileSync(filepath, 'utf8');\n  const file = matter(str, options);\n  file.path = filepath;\n  return file;\n};\n\n/**\n * Returns true if the given `string` has front matter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Boolean} True if front matter exists.\n * @api public\n */\n\nmatter.test = function(str, options) {\n  return utils.startsWith(str, defaults(options).delimiters[0]);\n};\n\n/**\n * Detect the language to use, if one is defined after the\n * first front-matter delimiter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Object} Object with `raw` (actual language string), and `name`, the language with whitespace trimmed\n */\n\nmatter.language = function(str, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n\n  if (matter.test(str)) {\n    str = str.slice(open.length);\n  }\n\n  const language = str.slice(0, str.search(/\\r?\\n/));\n  return {\n    raw: language,\n    name: language ? language.trim() : ''\n  };\n};\n\n/**\n * Expose `matter`\n */\n\nmatter.cache = {};\nmatter.clearCache = function() {\n  matter.cache = {};\n};\nmodule.exports = matter;\n","'use strict';\n\nconst engines = require('./engines');\nconst utils = require('./utils');\n\nmodule.exports = function(options) {\n  const opts = Object.assign({}, options);\n\n  // ensure that delimiters are an array\n  opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || '---');\n  if (opts.delimiters.length === 1) {\n    opts.delimiters.push(opts.delimiters[0]);\n  }\n\n  opts.language = (opts.language || opts.lang || 'yaml').toLowerCase();\n  opts.engines = Object.assign({}, engines, opts.parsers, opts.engines);\n  return opts;\n};\n","'use strict';\n\nmodule.exports = function(name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n  if (typeof engine === 'function') {\n    engine = { parse: engine };\n  }\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n    default: {\n      return name;\n    }\n  }\n}\n","'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function(obj, options) {\n    const opts = Object.assign({replacer: null, space: 2}, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function() {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};\n","'use strict';\n\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, options) {\n  const opts = defaults(options);\n\n  if (file.data == null) {\n    file.data = {};\n  }\n\n  if (typeof opts.excerpt === 'function') {\n    return opts.excerpt(file, opts);\n  }\n\n  const sep = file.data.excerpt_separator || opts.excerpt_separator;\n  if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {\n    return file;\n  }\n\n  const delimiter = typeof opts.excerpt === 'string'\n    ? opts.excerpt\n    : (sep || opts.delimiters[0]);\n\n  // if enabled, get the excerpt defined after front-matter\n  const idx = file.content.indexOf(delimiter);\n  if (idx !== -1) {\n    file.excerpt = file.content.slice(0, idx);\n  }\n\n  return file;\n};\n","'use strict';\n\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(language, str, options) {\n  const opts = defaults(options);\n  const engine = getEngine(language, opts);\n  if (typeof engine.parse !== 'function') {\n    throw new TypeError('expected \"' + language + '.parse\" to be a function');\n  }\n  return engine.parse(str, opts);\n};\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default: {\n        throw new TypeError('expected file to be a string or object');\n      }\n    }\n  }\n\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n\n  return buf + newline(str);\n};\n\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\nmodule.exports = function(file) {\n  if (typeOf(file) !== 'object') {\n    file = { content: file };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  }\n\n  // if file was passed as an object, ensure that\n  // \"file.content\" is set\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  }\n\n  // set non-enumerable properties on the file object\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function(data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n    return stringify(file, data, options);\n  });\n\n  // strip BOM and ensure that \"file.content\" is a string\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};\n","'use strict';\n\nconst stripBom = require('strip-bom-string');\nconst typeOf = require('kind-of');\n\nexports.define = function(obj, key, val) {\n  Reflect.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: val\n  });\n};\n\n/**\n * Returns true if `val` is a buffer\n */\n\nexports.isBuffer = function(val) {\n  return typeOf(val) === 'buffer';\n};\n\n/**\n * Returns true if `val` is an object\n */\n\nexports.isObject = function(val) {\n  return typeOf(val) === 'object';\n};\n\n/**\n * Cast `input` to a buffer\n */\n\nexports.toBuffer = function(input) {\n  return typeof input === 'string' ? Buffer.from(input) : input;\n};\n\n/**\n * Cast `val` to a string.\n */\n\nexports.toString = function(input) {\n  if (exports.isBuffer(input)) return stripBom(String(input));\n  if (typeof input !== 'string') {\n    throw new TypeError('expected input to be a string or buffer');\n  }\n  return stripBom(input);\n};\n\n/**\n * Cast `val` to an array.\n */\n\nexports.arrayify = function(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n};\n\n/**\n * Returns true if `str` starts with `substr`.\n */\n\nexports.startsWith = function(str, substr, len) {\n  if (typeof len !== 'number') len = substr.length;\n  return str.slice(0, len) === substr;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// [24] b-line-feed       ::=     #xA    /* LF */\n// [25] b-carriage-return ::=     #xD    /* CR */\n// [3]  c-byte-order-mark ::=     #xFEFF\nfunction isNsChar(c) {\n  return isPrintable(c) && !isWhitespace(c)\n    // byte-order-mark\n    && c !== 0xFEFF\n    // b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c, prev) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    // /* An ns-char preceding */ \"#\"\n    && c !== CHAR_COLON\n    && ((c !== CHAR_SHARP) || (prev && isNsChar(prev)));\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char, prev_char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (index !== 0) pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","'use strict';\n\nvar typeOf = require('kind-of');\nvar extend = require('extend-shallow');\n\n/**\n * Parse sections in `input` with the given `options`.\n *\n * ```js\n * var sections = require('{%= name %}');\n * var result = sections(input, options);\n * // { content: 'Content before sections', sections: [] }\n * ```\n * @param {String|Buffer|Object} `input` If input is an object, it's `content` property must be a string or buffer.\n * @param {Object} options\n * @return {Object} Returns an object with a `content` string and an array of `sections` objects.\n * @api public\n */\n\nmodule.exports = function(input, options) {\n  if (typeof options === 'function') {\n    options = { parse: options };\n  }\n\n  var file = toObject(input);\n  var defaults = {section_delimiter: '---', parse: identity};\n  var opts = extend({}, defaults, options);\n  var delim = opts.section_delimiter;\n  var lines = file.content.split(/\\r?\\n/);\n  var sections = null;\n  var section = createSection();\n  var content = [];\n  var stack = [];\n\n  function initSections(val) {\n    file.content = val;\n    sections = [];\n    content = [];\n  }\n\n  function closeSection(val) {\n    if (stack.length) {\n      section.key = getKey(stack[0], delim);\n      section.content = val;\n      opts.parse(section, sections);\n      sections.push(section);\n      section = createSection();\n      content = [];\n      stack = [];\n    }\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var len = stack.length;\n    var ln = line.trim();\n\n    if (isDelimiter(ln, delim)) {\n      if (ln.length === 3 && i !== 0) {\n        if (len === 0 || len === 2) {\n          content.push(line);\n          continue;\n        }\n        stack.push(ln);\n        section.data = content.join('\\n');\n        content = [];\n        continue;\n      }\n\n      if (sections === null) {\n        initSections(content.join('\\n'));\n      }\n\n      if (len === 2) {\n        closeSection(content.join('\\n'));\n      }\n\n      stack.push(ln);\n      continue;\n    }\n\n    content.push(line);\n  }\n\n  if (sections === null) {\n    initSections(content.join('\\n'));\n  } else {\n    closeSection(content.join('\\n'));\n  }\n\n  file.sections = sections;\n  return file;\n};\n\nfunction isDelimiter(line, delim) {\n  if (line.slice(0, delim.length) !== delim) {\n    return false;\n  }\n  if (line.charAt(delim.length + 1) === delim.slice(-1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction toObject(input) {\n  if (typeOf(input) !== 'object') {\n    input = { content: input };\n  }\n\n  if (typeof input.content !== 'string' && !isBuffer(input.content)) {\n    throw new TypeError('expected a buffer or string');\n  }\n\n  input.content = input.content.toString();\n  input.sections = [];\n  return input;\n}\n\nfunction getKey(val, delim) {\n  return val ? val.slice(delim.length).trim() : '';\n}\n\nfunction createSection() {\n  return { key: '', data: '', content: '' };\n}\n\nfunction identity(val) {\n  return val;\n}\n\nfunction isBuffer(val) {\n  if (val && val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","/*!\n * strip-bom-string <https://github.com/jonschlinkert/strip-bom-string>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(str) {\n  if (typeof str === 'string' && str.charAt(0) === '\\ufeff') {\n    return str.slice(1);\n  }\n  return str;\n};\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["isObject","assign","a","b","key","hasOwn","obj","Object","prototype","hasOwnProperty","call","module","exports","o","len","arguments","length","i","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","fs","sections","defaults","stringify","excerpt","engines","toFile","parse","utils","matter","input","data","content","orig","file","cached","cache","opts","open","delimiters","close","str","language","openLen","startsWith","charAt","slice","raw","closeIndex","indexOf","block","replace","trim","isEmpty","empty","section","parseMatter","read","filepath","readFileSync","path","test","search","clearCache","arrayify","delims","push","lang","toLowerCase","parsers","engine","aliase","Error","yaml","safeLoad","bind","safeDump","json","JSON","replacer","space","javascript","wrap","eval","err","message","SyntaxError","sep","excerpt_separator","delimiter","idx","getEngine","TypeError","typeOf","newline","buf","contents","define","toBuffer","stripBom","val","Reflect","isBuffer","Buffer","from","String","substr","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","style","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","errorsList","error","msg","reason","filename","silent","re","m","exec","comments","rules","c","comment","pos","type","declaration","prop","ret","property","decl","decls","declarations","__importDefault","mod","__esModule","iterator","styleObject","inline_style_parser_1","default","hasIterator","forEach","loader","dumper","deprecated","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SAFE_SCHEMA","DEFAULT_FULL_SCHEMA","load","loadAll","safeLoadAll","dump","YAMLException","MINIMAL_SCHEMA","SAFE_SCHEMA","DEFAULT_SCHEMA","scan","compose","addConstructor","isNothing","subject","toArray","sequence","repeat","string","count","cycle","result","isNegativeZero","number","Number","NEGATIVE_INFINITY","index","sourceKeys","keys","common","_toString","_hasOwnProperty","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","encodeHex","character","handle","toUpperCase","State","schema","indent","Math","max","noArrayIndent","skipInvalid","flowLevel","styleMap","map","tag","compiledTypeMap","styleAliases","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","implicitTypes","compiledImplicit","explicitTypes","compiledExplicit","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","state","level","isWhitespace","isPrintable","isPlainSafe","prev","isNsChar","needIndentIndicator","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prev_char","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","charCodeAt","writeScalar","iskey","min","resolve","testImplicitResolving","blockHeader","dropEndingNewline","width","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","prefix","foldString","nextChar","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","detectType","object","explicit","_result","typeList","instanceOf","predicate","represent","defaultStyle","writeNode","compact","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","_tag","objectKeyList","sort","writeBlockMapping","writeFlowMapping","arrayLevel","writeBlockSequence","writeFlowSequence","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","mark","captureStackTrace","stack","create","Mark","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","onWarning","legacy","listener","typeMap","lineStart","lineIndent","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","parseInt","checkLineBreaks","TAG","tagMap","captureSegment","checkJson","_position","_length","_character","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startPos","readLineBreak","ch","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_anchor","anchor","detected","anchorMap","composeNode","kind","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_pos","atExplicitKey","readBlockMapping","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","alias","readAlias","withinFlowCollection","hasPendingContent","_lineStart","_lineIndent","_kind","readPlainScalar","construct","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","buffer","getSnippet","maxLength","head","tail","snippet","where","compileList","exclude","include","includedSchema","currentType","previousType","previousIndex","filter","definition","implicit","loadKind","scalar","mapping","fallback","collectType","compileMap","DEFAULT","schemas","types","every","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","NodeBuffer","__","BASE64_MAP","code","bitlen","tailbits","bits","lowercase","uppercase","camelcase","YAML_FLOAT_PATTERN","RegExp","SCIENTIFIC_WITHOUT_DOT","sign","base","digits","POSITIVE_INFINITY","NaN","split","v","unshift","parseFloat","d","res","isNaN","isOctCode","isDecCode","hasDigits","binary","octal","decimal","hexadecimal","esprima","_","window","ast","range","body","expression","params","param","Function","regexp","modifiers","global","multiline","ignoreCase","canonical","pair","pairKey","pairHasKey","objectKeys","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","year","month","day","hour","minute","second","date","fraction","delta","Date","UTC","setTime","getTime","toISOString","ctorName","callee","isArguments","toDateString","getDate","setDate","isDate","stackTraceLimit","isError","flags","isRegexp","throw","return","isGeneratorObj","isDelimiter","delim","identity","toObject","section_delimiter","initSections","closeSection","getKey","ln","join","nameRe","nameReJsx","emptyOptions","jsx","normal","merge","definitions","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","mask","super","check","values","own","properties","info","transform","attributes","includes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","list","loading","loop","low","manifest","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","hastToReact","point","pointStart","undefined","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","parent","fatal","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","get","set","rest","dashes","find","settings","padRight","padLeft","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","reverse","concat","deleteCount","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","all","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","document","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","extensions","combineExtensions","decodeNumericCharacterReference","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","lossy","strict","valueOf","toJSON","entries","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","revert","subtype","suffix","listItemLoose","tab","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","footnoteDefinition","createState","footnoteById","handlers","nodes","trimMarkdownSpaceStart","passThrough","shallow","unknownHandler","defaultUnknownHandler","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign"],"sourceRoot":""}